package com.reference;

/**
 * @author xushichao
 * @date 2023/3/27 16:18
 * @desc
 *
 * 原始数据类型的变量，其他所有都是所谓的引用类型，指向各种不同的对象，理解引用对于掌握Java对象生命周期和JVM内部相关机制非常有帮助
 * ，强引用、软引用、弱引用、幻象引用有什么区别？具体使用场景是什么？
 * 不同的引用类型，主要体现的是对象不同的可达性（reachable）状态和对垃圾收集的影响。
 *
 * SoftReference:可以让对象豁免一些垃圾收集，只有当JVM认为内存不足时，才会去试图回收软引用指向的对象;
 * 软引用通常用来实现内存敏感的缓存，如果还有空闲内存，就可以暂时保留缓存，当内存不足时清理掉，这样就保证了使用缓存的同时，不会耗尽内存
 * WeakReference: 不能使对象豁免垃圾收集，仅仅是提供一种访问在弱引用状态下对象的途径
 * 维护一种非强制性的映射关系，如果试图获取时对象还在，就使用它，否则重现实例化。它同样是很多缓存实现的选择。
 */
public class WeakReferenceDemo {
}
